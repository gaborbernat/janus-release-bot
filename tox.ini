[tox]
skipsdist = True
envlist = py36,
          coverage,
          fix-lint
minversion = 2.9.0
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
setenv = PIP_DISABLE_VERSION_CHECK = 1
         COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
         PYTHONPATH={toxinidir}
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
deps = -r requirements.txt
       pytest >= 3.7.0
       pytest-cov >= 2.5.0
commands = pytest {posargs:--cov=janus --cov-config=tox.ini tests}

[testenv:fix-lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = {[testenv]passenv}
          HOMEPATH
          PROGRAMDATA
deps = pre-commit == 1.10.3
skip_install = True
changedir = {toxinidir}
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'


[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 4.4.1, < 5
       diff_cover
skip_install = True
passenv = {[testenv]passenv}
          DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
changedir = {toxinidir}
commands = coverage erase
           coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
passenv = {[testenv]passenv}
          CODECOV_TOKEN
deps = codecov
skip_install = True
changedir = {toxinidir}
commands = codecov --file "{toxworkdir}/coverage.xml" {posargs}

[flake8]
max-complexity = 22
max-line-length = 99
ignore = E203, W503

[coverage:run]
branch = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines = if __name__ == ["']__main__["']:

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = tox
known_third_party = sanic,setuptools_scm

[start]
deps = -r requirements.txt
setenv = GITHUB_APP_IDENTIFIER=15459
         GITHUB_WEBHOOK_SECRET=janus
command =
